/**
 *
 * @author Luis Ángel de la Torre Gómez
 */
import java.awt.Image;
import java.io.File;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;

public class frmIngresar extends javax.swing.JFrame {

    /**
     * Creates new form frmIngresar
     */
    static Nodo auxiliar = Principal.inicio;
    static JFileChooser explorador = new JFileChooser();
    String dirtmp = "";
    static ArregloObjetos array[];
    public frmIngresar() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblFoto = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtFrase = new javax.swing.JTextField();
        txtCodigo = new javax.swing.JTextField();
        btnBuscarFoto = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtEdad = new javax.swing.JTextField();
        btnRegresar = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Ingresar alumno");

        lblFoto.setBackground(new java.awt.Color(255, 255, 255));
        lblFoto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFoto.setText("Sin foto");
        lblFoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblFoto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblFoto.setOpaque(true);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Nombre:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Edad:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Frase:");

        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtFrase.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtCodigo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        btnBuscarFoto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBuscarFoto.setMnemonic('b');
        btnBuscarFoto.setText("Buscar fotografía");
        btnBuscarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarFotoActionPerformed(evt);
            }
        });

        btnGuardar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnGuardar.setMnemonic('g');
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Código:");

        txtEdad.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnRegresar.setBackground(new java.awt.Color(255, 255, 102));
        btnRegresar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRegresar.setText("<");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnRegresar)
                        .addGap(93, 93, 93)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFrase, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNombre))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnBuscarFoto)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(34, 34, 34)
                    .addComponent(btnGuardar)
                    .addContainerGap(432, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnRegresar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFrase, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(btnBuscarFoto))
                    .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(130, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(437, Short.MAX_VALUE)
                    .addComponent(btnGuardar)
                    .addGap(48, 48, 48)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarFotoActionPerformed
        insertarFoto();//El usuario inserta la foto
        Mostrar_imagen(dirtmp);//Muestra la imagen en el lbl
        lblFoto.setText("");
    }//GEN-LAST:event_btnBuscarFotoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if(txtCodigo.getText().equals("") || txtNombre.equals("") || txtEdad.equals("") || txtFrase.equals("") || dirtmp == "")
        {
            JOptionPane.showMessageDialog(null, "Ningun campo puede estar vacío. Vuelva a ingresar de nuevo.");
            //Borra campos de textos e reinicializa
                txtCodigo.setText("");
                txtNombre.setText("");
                txtEdad.setText("");
                txtFrase.setText("");
                lblFoto.setIcon(null);
                lblFoto.setText("Sin foto");
        }else
        {
            try
            {
                int x = Integer.parseInt(txtEdad.getText()); //Comprueba que haya insertado un numero
                //Inserta el nodo
                insertar(txtNombre.getText(),dirtmp,txtEdad.getText(),txtFrase.getText(),null,null,Integer.parseInt(txtCodigo.getText()));
                Principal.contador++;
                obtenerDatos();
                quickSort(0, Principal.contador - 1);
                JOptionPane.showMessageDialog(null, "Los datos se han guardado con exito");
                
                //Borra campos de textos e reinicializa
                txtCodigo.setText("");
                txtNombre.setText("");
                txtEdad.setText("");
                txtFrase.setText("");
                lblFoto.setIcon(null);
                lblFoto.setText("Sin foto");
               // Principal rtn = new Principal();
               // rtn.setVisible(true);
               // this.setVisible(false);
               
                for (int i = 0; i < Principal.contador; i++) {
                    System.out.println(array[i].codigos);
                }
            }catch(Exception ex)
            {
                JOptionPane.showMessageDialog(null, "ERROR. Debe ingresar valores numericos en Codigo y/o edad");
            }
            
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void txtEdadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEdadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEdadActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        Principal rtn = new Principal();
        rtn.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnRegresarActionPerformed

    static void quickSort(int left, int right) {
        int index = partition(left, right);
	if (left < index - 1) {
            // sort left
            quickSort(left, index - 1);
	}
	if (index < right) {
            // sort right
            quickSort(index, right);
	}
    }
    
    private static int partition(int left, int right) {
	int pivot = array[(left + right) / 2].codigos;
	while (left <= right) {
		// find element on left that should be on right
		while (array[left].codigos < pivot) {
			left++;
		}
		// find element on right that should be on left
		while (array[right].codigos > pivot) {
			right--;
		}
		// swap elements, and move left and right indices
		if (left <= right) {
			swap(left, right);
			left++;
			right--;
		}
	}
	return left;
    }
    
    public static void swap( int i, int j) {
        int temp = array[i].codigos;
        array[i].codigos = array[j].codigos;
        array[j].codigos = temp;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmIngresar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmIngresar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmIngresar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmIngresar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmIngresar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarFoto;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtFrase;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
    
/**
 * Funciona para insertar un nuevo nodo a la lista
 * Se ingresan todos los atributos del nodo
 * @param nombre 
 * @param rutaImagen
 * @param edad
 * @param frase
 * @param anterior
 * @param siguiente
 * @param codigo 
 */
    public void insertar(String nombre, String rutaImagen, String edad, String frase, Nodo anterior, Nodo siguiente, int codigo) {
        Nodo nuevo = new Nodo( nombre,  rutaImagen,  edad,  frase,  anterior,  siguiente, codigo);
        if (Principal.fin == null) {
            nuevo.setAnterior(nuevo);
            nuevo.setSiguiente(nuevo);
            Principal.inicio = nuevo;
            Principal.fin = nuevo;
        } else {
            nuevo.setAnterior(Principal.fin);
            nuevo.setSiguiente(Principal.inicio);
            Principal.fin.setSiguiente(nuevo);
            Principal.inicio.setAnterior(nuevo);
            Principal.fin = nuevo;
        }
    }
    
    static void  obtenerDatos() {
        auxiliar = Principal.inicio;
        array = new ArregloObjetos[Principal.contador];
        
        if (Principal.inicio == null) {
           System.out.println("no hay nada");
       } else {
            for(int i = 0; i < Principal.contador; i++ ) {
            array[i] = new ArregloObjetos();
            array[i].codigos = auxiliar.getCodigo();
            array[i].dirtmp = auxiliar.getRutaImagen();
            array[i].nombre = auxiliar.getNombre();
            array[i].edad = auxiliar.getEdad();
            array[i].frase = auxiliar.getFrase();
            System.out.println(array[i].codigos);
            System.out.println(array[i].dirtmp);
               
            auxiliar = auxiliar.getSiguiente();
            }
       }
    }
    /**
     * Captura la ruta de una imagen y la guarda en la variable dirtmp
     */
    void insertarFoto()
        {
        try{
            explorador.addChoosableFileFilter(
            new FileNameExtensionFilter
                ("Imágenes","jpg","png","jpeg","gif"));
            explorador.showOpenDialog(null);//ventana de diálogo esta inicializada en null
            File auxFile;
            auxFile = explorador.getSelectedFile();
            dirtmp = auxFile.getAbsolutePath();

        }catch(Exception ex)
        {
                JOptionPane.showMessageDialog(null,
                "Error al abrir el archivo","Advertencia",
                JOptionPane.WARNING_MESSAGE);
        }

        }
    
    void Mostrar_imagen(String ruta_imagen)
    {
        try{
            if(Principal.fin==null){
                lblFoto.setText("Lista vacia");
                lblFoto.setIcon(null);
                }else
                {    
                ImageIcon foto;
                foto = new ImageIcon(ruta_imagen);
                Icon icono;
                icono = new ImageIcon(foto.getImage()
                .getScaledInstance(lblFoto.getWidth(),lblFoto.getHeight()
                ,Image.SCALE_DEFAULT));//adapatación al tamaño de la etiqueta
                lblFoto.setIcon(icono);
                }
            }catch(Exception ex)
            {
                JOptionPane.showMessageDialog(null,
                "Error al abrir el archivo","Advertencia",
                JOptionPane.WARNING_MESSAGE);
            }
    }
        
}


    
